<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.0 on win32)" generated="20240104 13:57:11.757" rpa="false" schemaversion="4">
<suite id="s1" name="Code Type" source="d:\Automation Testing\test\test\testcases\code_type.robot">
<test id="s1-t1" name="CT_54 Verify the cancel action button when delete data &quot;Nhóm thủ thuật&quot;" line="706">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20240104 13:57:12.822" endtime="20240104 13:57:12.822"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20240104 13:57:12.822" level="INFO">{"browser": "chromium", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Automation Testing\\browser\\traces\\bdec48f7-fc55-4a46-90a4-3b8ded8f5c76"}</msg>
<msg timestamp="20240104 13:57:13.210" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Automation Testing\\browser\\traces\\bdec48f7-fc55-4a46-90a4-3b8ded8f5c76"}</msg>
<status status="PASS" starttime="20240104 13:57:12.822" endtime="20240104 13:57:13.210"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20240104 13:57:16.540" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20240104 13:57:16.540" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20240104 13:57:13.221" endtime="20240104 13:57:16.540"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240104 13:57:16.544" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20240104 13:57:16.540" endtime="20240104 13:57:16.544"/>
</kw>
<status status="PASS" starttime="20240104 13:57:12.822" endtime="20240104 13:57:16.544"/>
</kw>
<kw name="Create a test data with &quot;Nhóm thủ thuật&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Danh mục" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Danh mục&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:16.598" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.545" endtime="20240104 13:57:16.598"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240104 13:57:16.598" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20240104 13:57:16.598" endtime="20240104 13:57:16.598"/>
</kw>
<status status="FAIL" starttime="20240104 13:57:16.545" endtime="20240104 13:57:16.599"/>
</kw>
<msg timestamp="20240104 13:57:16.599" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20240104 13:57:16.545" endtime="20240104 13:57:16.599"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Select on the &quot;${type}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240104 13:57:16.599" endtime="20240104 13:57:16.599"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20240104 13:57:16.599" endtime="20240104 13:57:16.599"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.599" endtime="20240104 13:57:16.599"/>
</branch>
<branch type="ELSE">
<if>
<branch type="IF" condition="'${type}' == 'Nhóm thủ thuật'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_PROCEDURE_GROUP&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:16.699" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:16.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:16.701" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:16.700" endtime="20240104 13:57:16.701"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:16.711" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.701" endtime="20240104 13:57:16.711"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:16.712" endtime="20240104 13:57:16.712"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.711" endtime="20240104 13:57:16.712"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.711" endtime="20240104 13:57:16.712"/>
</if>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:16.712"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:16.713" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240104 13:57:16.713" endtime="20240104 13:57:16.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:16.714" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240104 13:57:16.713" endtime="20240104 13:57:16.714"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:16.714" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:16.714" endtime="20240104 13:57:16.714"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.716" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:16.716" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.716" endtime="20240104 13:57:16.716"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:16.716" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240104 13:57:16.716" endtime="20240104 13:57:16.716"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.716" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:16.716" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.716" endtime="20240104 13:57:16.716"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.717"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.722" endtime="20240104 13:57:16.722"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.722" endtime="20240104 13:57:16.722"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.722" endtime="20240104 13:57:16.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.722" endtime="20240104 13:57:16.723"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.722" endtime="20240104 13:57:16.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240104 13:57:16.723" endtime="20240104 13:57:16.723"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.723" endtime="20240104 13:57:16.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.723" endtime="20240104 13:57:16.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.724" endtime="20240104 13:57:16.724"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.723" endtime="20240104 13:57:16.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.724" endtime="20240104 13:57:16.724"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.724" endtime="20240104 13:57:16.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.724" endtime="20240104 13:57:16.725"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.724" endtime="20240104 13:57:16.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.725" endtime="20240104 13:57:16.725"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.725" endtime="20240104 13:57:16.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.725" endtime="20240104 13:57:16.726"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.725" endtime="20240104 13:57:16.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.726" endtime="20240104 13:57:16.726"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.726" endtime="20240104 13:57:16.726"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.717" endtime="20240104 13:57:16.726"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.727" level="INFO">Length is 15</msg>
<msg timestamp="20240104 13:57:16.727" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20240104 13:57:16.726" endtime="20240104 13:57:16.727"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240104 13:57:16.727" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20240104 13:57:16.727" endtime="20240104 13:57:16.727"/>
</kw>
<status status="PASS" starttime="20240104 13:57:16.727" endtime="20240104 13:57:16.727"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.727" endtime="20240104 13:57:16.728"/>
</if>
<msg timestamp="20240104 13:57:16.728" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20240104 13:57:16.712" endtime="20240104 13:57:16.728"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240104 13:57:16.728" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240104 13:57:16.728" endtime="20240104 13:57:16.728"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:16.728" endtime="20240104 13:57:16.792"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240104 13:57:16.793" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20240104 13:57:16.793" endtime="20240104 13:57:16.830"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.831" level="INFO">Length is 15</msg>
<msg timestamp="20240104 13:57:16.831" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20240104 13:57:16.831" endtime="20240104 13:57:16.831"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240104 13:57:16.833" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20240104 13:57:16.832" endtime="20240104 13:57:16.833"/>
</kw>
<status status="PASS" starttime="20240104 13:57:16.831" endtime="20240104 13:57:16.833"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.831" endtime="20240104 13:57:16.833"/>
</if>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:16.833"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:16.936" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:16.835" endtime="20240104 13:57:16.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:16.938" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:16.937" endtime="20240104 13:57:16.938"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:16.948" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.938" endtime="20240104 13:57:16.948"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:16.949" endtime="20240104 13:57:16.950"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.949" endtime="20240104 13:57:16.950"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.948" endtime="20240104 13:57:16.950"/>
</if>
<status status="PASS" starttime="20240104 13:57:16.834" endtime="20240104 13:57:16.950"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:16.952" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240104 13:57:16.951" endtime="20240104 13:57:16.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:16.953" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240104 13:57:16.952" endtime="20240104 13:57:16.953"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:16.954" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:16.954" endtime="20240104 13:57:16.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.955" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:16.955" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.955" endtime="20240104 13:57:16.955"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:16.956" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240104 13:57:16.955" endtime="20240104 13:57:16.956"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.957" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:16.957" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240104 13:57:16.957" endtime="20240104 13:57:16.957"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.957" endtime="20240104 13:57:16.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.959" endtime="20240104 13:57:16.959"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.957" endtime="20240104 13:57:16.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.959" endtime="20240104 13:57:16.960"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.960" endtime="20240104 13:57:16.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.960" endtime="20240104 13:57:16.960"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.959" endtime="20240104 13:57:16.960"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.961" endtime="20240104 13:57:16.961"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.961" endtime="20240104 13:57:16.961"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.960" endtime="20240104 13:57:16.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.962" endtime="20240104 13:57:16.962"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.962" endtime="20240104 13:57:16.962"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.961" endtime="20240104 13:57:16.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.962" endtime="20240104 13:57:16.962"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.962" endtime="20240104 13:57:16.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240104 13:57:16.963" endtime="20240104 13:57:16.963"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.963" endtime="20240104 13:57:16.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.963" endtime="20240104 13:57:16.963"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.964" endtime="20240104 13:57:16.964"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.963" endtime="20240104 13:57:16.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.964" endtime="20240104 13:57:16.964"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.964" endtime="20240104 13:57:16.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.965" endtime="20240104 13:57:16.965"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.964" endtime="20240104 13:57:16.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.965" endtime="20240104 13:57:16.965"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.965" endtime="20240104 13:57:16.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.966" endtime="20240104 13:57:16.966"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.965" endtime="20240104 13:57:16.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:16.966" endtime="20240104 13:57:16.966"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:16.966" endtime="20240104 13:57:16.966"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.957" endtime="20240104 13:57:16.966"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:16.967" level="INFO">Length is 6</msg>
<msg timestamp="20240104 13:57:16.967" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240104 13:57:16.966" endtime="20240104 13:57:16.967"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240104 13:57:16.968" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20240104 13:57:16.968" endtime="20240104 13:57:16.968"/>
</kw>
<status status="PASS" starttime="20240104 13:57:16.968" endtime="20240104 13:57:16.968"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.968" endtime="20240104 13:57:16.968"/>
</if>
<msg timestamp="20240104 13:57:16.968" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20240104 13:57:16.950" endtime="20240104 13:57:16.968"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240104 13:57:16.968" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240104 13:57:16.968" endtime="20240104 13:57:16.968"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:16.968" endtime="20240104 13:57:16.998"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240104 13:57:17.000" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20240104 13:57:16.999" endtime="20240104 13:57:17.056"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:17.058" level="INFO">Length is 6</msg>
<msg timestamp="20240104 13:57:17.058" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240104 13:57:17.057" endtime="20240104 13:57:17.058"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240104 13:57:17.059" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20240104 13:57:17.059" endtime="20240104 13:57:17.060"/>
</kw>
<status status="PASS" starttime="20240104 13:57:17.058" endtime="20240104 13:57:17.060"/>
</branch>
<status status="PASS" starttime="20240104 13:57:17.058" endtime="20240104 13:57:17.060"/>
</if>
<status status="PASS" starttime="20240104 13:57:16.833" endtime="20240104 13:57:17.060"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:17.061" endtime="20240104 13:57:17.144"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:17.145" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240104 13:57:17.145" endtime="20240104 13:57:17.145"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:17.154" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:17.145" endtime="20240104 13:57:17.155"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:17.156" endtime="20240104 13:57:17.156"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240104 13:57:17.157" endtime="20240104 13:57:17.157"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:17.156" endtime="20240104 13:57:17.157"/>
</branch>
<status status="PASS" starttime="20240104 13:57:17.155" endtime="20240104 13:57:17.157"/>
</if>
<status status="PASS" starttime="20240104 13:57:17.144" endtime="20240104 13:57:17.157"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240104 13:57:17.173" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:17.173" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:17.182" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:17.182" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:17.190" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240104 13:57:17.157" endtime="20240104 13:57:17.190"/>
</kw>
<status status="PASS" starttime="20240104 13:57:17.061" endtime="20240104 13:57:17.191"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:17.191" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240104 13:57:17.191" endtime="20240104 13:57:17.192"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:17.192" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:17.192" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240104 13:57:17.192" endtime="20240104 13:57:17.192"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:17.193" endtime="20240104 13:57:17.193"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:17.192" endtime="20240104 13:57:17.193"/>
</branch>
<status status="PASS" starttime="20240104 13:57:17.192" endtime="20240104 13:57:17.193"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240104 13:57:17.339" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240104 13:57:17.194" endtime="20240104 13:57:17.339"/>
</kw>
<status status="PASS" starttime="20240104 13:57:17.193" endtime="20240104 13:57:17.340"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240104 13:57:17.366" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240104 13:57:17.341" endtime="20240104 13:57:17.368"/>
</kw>
<status status="PASS" starttime="20240104 13:57:17.340" endtime="20240104 13:57:17.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:17.369" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240104 13:57:17.368" endtime="20240104 13:57:17.369"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240104 13:57:17.693" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240104 13:57:17.693" level="INFO">See also file:///D:/Automation%20Testing/playwright-log.txt for additional details.</msg>
<msg timestamp="20240104 13:57:17.693" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240104 13:57:17.372" endtime="20240104 13:57:17.697"/>
</kw>
<status status="FAIL" starttime="20240104 13:57:17.371" endtime="20240104 13:57:17.697"/>
</kw>
<msg timestamp="20240104 13:57:17.697" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240104 13:57:17.370" endtime="20240104 13:57:17.697"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:17.698" endtime="20240104 13:57:17.698"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:17.697" endtime="20240104 13:57:17.698"/>
</branch>
<status status="PASS" starttime="20240104 13:57:17.697" endtime="20240104 13:57:17.698"/>
</if>
<status status="PASS" starttime="20240104 13:57:17.191" endtime="20240104 13:57:17.698"/>
</kw>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:17.698"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:17.699" endtime="20240104 13:57:19.252"/>
</kw>
<status status="PASS" starttime="20240104 13:57:17.698" endtime="20240104 13:57:19.252"/>
</kw>
<kw name="Click &quot;Danh mục&quot; sub menu to &quot;/code-types&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:19.354" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:19.253" endtime="20240104 13:57:19.354"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:19.355" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:19.355" endtime="20240104 13:57:19.355"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:19.360" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:19.355" endtime="20240104 13:57:19.360"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:19.361" endtime="20240104 13:57:19.361"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:19.360" endtime="20240104 13:57:19.361"/>
</branch>
<status status="PASS" starttime="20240104 13:57:19.360" endtime="20240104 13:57:19.361"/>
</if>
<status status="PASS" starttime="20240104 13:57:19.253" endtime="20240104 13:57:19.361"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:19.361" endtime="20240104 13:57:19.495"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20240104 13:57:19.498" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/code-types?filter=%7B%22type%22:%22MEDICAL_PROCEDURE_GROUP%22%7D</msg>
<status status="PASS" starttime="20240104 13:57:19.495" endtime="20240104 13:57:19.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240104 13:57:19.498" endtime="20240104 13:57:19.499"/>
</kw>
<status status="PASS" starttime="20240104 13:57:19.252" endtime="20240104 13:57:19.499"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '/MEDICAL_PROCEDURE_GROUP'">
<kw name="Select on the &quot;Nhóm thủ thuật&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:19.500" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:19.500" endtime="20240104 13:57:19.500"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:19.500" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:19.500" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:19.500" endtime="20240104 13:57:19.500"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:19.501" endtime="20240104 13:57:19.501"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:19.501" endtime="20240104 13:57:19.501"/>
</branch>
<status status="PASS" starttime="20240104 13:57:19.501" endtime="20240104 13:57:19.501"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240104 13:57:19.501" endtime="20240104 13:57:19.502"/>
</return>
<msg timestamp="20240104 13:57:19.502" level="INFO">${text} = Nhóm thủ thuật</msg>
<status status="PASS" starttime="20240104 13:57:19.499" endtime="20240104 13:57:19.502"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:19.603" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:19.502" endtime="20240104 13:57:19.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:19.603" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:19.603" endtime="20240104 13:57:19.603"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:19.632" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:19.603" endtime="20240104 13:57:19.632"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:19.645" endtime="20240104 13:57:19.646"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:19.645" endtime="20240104 13:57:19.646"/>
</branch>
<status status="PASS" starttime="20240104 13:57:19.645" endtime="20240104 13:57:19.646"/>
</if>
<status status="PASS" starttime="20240104 13:57:19.502" endtime="20240104 13:57:19.646"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<return>
<value>xpath=//*[contains(@class, "item-text") and contains(text(), "${name}")]/ancestor::*[contains(@class, "item")]${xpath}</value>
<status status="PASS" starttime="20240104 13:57:19.646" endtime="20240104 13:57:19.646"/>
</return>
<msg timestamp="20240104 13:57:19.646" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Nhóm thủ thuật")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20240104 13:57:19.646" endtime="20240104 13:57:19.646"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:19.646" endtime="20240104 13:57:20.022"/>
</kw>
<status status="PASS" starttime="20240104 13:57:19.499" endtime="20240104 13:57:20.022"/>
</kw>
<status status="PASS" starttime="20240104 13:57:19.499" endtime="20240104 13:57:20.022"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/MEDICAL_PROCEDURE_DIFFICULTY'">
<kw name="Select on the &quot;Độ khó&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240104 13:57:20.027" endtime="20240104 13:57:20.027"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.022" endtime="20240104 13:57:20.027"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/MEDICAL_DEGRE'">
<kw name="Select on the &quot;Bằng cấp chuyên môn&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240104 13:57:20.027" endtime="20240104 13:57:20.027"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.027" endtime="20240104 13:57:20.027"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/NUMBER_OF_TEETH'">
<kw name="Select on the &quot;Số răng&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240104 13:57:20.028" endtime="20240104 13:57:20.028"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.028" endtime="20240104 13:57:20.028"/>
</branch>
<status status="PASS" starttime="20240104 13:57:19.499" endtime="20240104 13:57:20.028"/>
</if>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:20.028" endtime="20240104 13:57:20.176"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.176" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240104 13:57:20.176" endtime="20240104 13:57:20.176"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:20.187" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.176" endtime="20240104 13:57:20.187"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.188" endtime="20240104 13:57:20.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.188" endtime="20240104 13:57:20.188"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.187" endtime="20240104 13:57:20.188"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.187" endtime="20240104 13:57:20.188"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.176" endtime="20240104 13:57:20.188"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240104 13:57:20.197" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.197" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.218" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.218" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.230" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240104 13:57:20.188" endtime="20240104 13:57:20.231"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.028" endtime="20240104 13:57:20.231"/>
</kw>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:20.231"/>
</kw>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:20.231"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:20.231"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Độ khó'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_PROCEDURE_DIFFICULTY&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240104 13:57:20.232" endtime="20240104 13:57:20.232"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.231" endtime="20240104 13:57:20.232"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.231" endtime="20240104 13:57:20.232"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Bằng cấp chuyên môn'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_DEGRE&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240104 13:57:20.232" endtime="20240104 13:57:20.232"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.232" endtime="20240104 13:57:20.233"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.232" endtime="20240104 13:57:20.233"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Số răng'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/NUMBER_OF_TEETH&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240104 13:57:20.233" endtime="20240104 13:57:20.233"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.233" endtime="20240104 13:57:20.233"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.233" endtime="20240104 13:57:20.233"/>
</if>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:20.233"/>
</branch>
<status status="PASS" starttime="20240104 13:57:16.599" endtime="20240104 13:57:20.233"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:20.336" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:20.235" endtime="20240104 13:57:20.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.336" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:20.336" endtime="20240104 13:57:20.336"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:20.349" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.339" endtime="20240104 13:57:20.349"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:20.350" endtime="20240104 13:57:20.350"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.349" endtime="20240104 13:57:20.350"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.349" endtime="20240104 13:57:20.350"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.234" endtime="20240104 13:57:20.352"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.354" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240104 13:57:20.353" endtime="20240104 13:57:20.354"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.355" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240104 13:57:20.354" endtime="20240104 13:57:20.355"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.356" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:20.355" endtime="20240104 13:57:20.356"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.358" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:20.358" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.358" endtime="20240104 13:57:20.358"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.359" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240104 13:57:20.359" endtime="20240104 13:57:20.360"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.360" level="INFO">Length is 1</msg>
<msg timestamp="20240104 13:57:20.361" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240104 13:57:20.360" endtime="20240104 13:57:20.361"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.362" endtime="20240104 13:57:20.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.362" endtime="20240104 13:57:20.363"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.361" endtime="20240104 13:57:20.363"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20240104 13:57:20.364" level="INFO">${random} = Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.363" endtime="20240104 13:57:20.364"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240104 13:57:20.365" level="INFO">${words} = ['CT_54', 'Verify', 'the', 'cancel', 'action', 'button', 'when', 'delete', 'data', '"Nhóm', 'thủ', 'thuật"']</msg>
<status status="PASS" starttime="20240104 13:57:20.364" endtime="20240104 13:57:20.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.366" level="INFO">${new_text} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.366" endtime="20240104 13:57:20.367"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.363" endtime="20240104 13:57:20.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.367"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.367"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.367"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.367"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.367"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.371" endtime="20240104 13:57:20.371"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.367" endtime="20240104 13:57:20.371"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240104 13:57:20.371" endtime="20240104 13:57:20.371"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.371" endtime="20240104 13:57:20.372"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.372" endtime="20240104 13:57:20.372"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.372" endtime="20240104 13:57:20.372"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.372" endtime="20240104 13:57:20.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.373" endtime="20240104 13:57:20.373"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.373" endtime="20240104 13:57:20.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.374" endtime="20240104 13:57:20.374"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.373" endtime="20240104 13:57:20.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.374" endtime="20240104 13:57:20.374"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.374" endtime="20240104 13:57:20.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.375" endtime="20240104 13:57:20.375"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.375" endtime="20240104 13:57:20.375"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.376" endtime="20240104 13:57:20.376"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.375" endtime="20240104 13:57:20.376"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.361" endtime="20240104 13:57:20.376"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.377" level="INFO">Length is 8</msg>
<msg timestamp="20240104 13:57:20.377" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240104 13:57:20.376" endtime="20240104 13:57:20.377"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240104 13:57:20.379" level="INFO">${text} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.378" endtime="20240104 13:57:20.379"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.377" endtime="20240104 13:57:20.379"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.377" endtime="20240104 13:57:20.379"/>
</if>
<msg timestamp="20240104 13:57:20.379" level="INFO">${text} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.352" endtime="20240104 13:57:20.380"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240104 13:57:20.380" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240104 13:57:20.380" endtime="20240104 13:57:20.380"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:20.380" endtime="20240104 13:57:20.400"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240104 13:57:20.401" level="INFO">Fills the text 'CT_54 Dolores placeat placeat animi.' in the given field.</msg>
<status status="PASS" starttime="20240104 13:57:20.401" endtime="20240104 13:57:20.423"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.423" level="INFO">Length is 36</msg>
<msg timestamp="20240104 13:57:20.423" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.423"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240104 13:57:20.423" level="INFO">${STATE["Tiêu đề"]} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.423"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.423"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.423"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.234" endtime="20240104 13:57:20.423"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.423" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.423"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.423" level="INFO">Length is 1</msg>
<msg timestamp="20240104 13:57:20.423" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.423"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.428" level="INFO">${text} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.428" endtime="20240104 13:57:20.428"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.428" endtime="20240104 13:57:20.429"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.428" endtime="20240104 13:57:20.429"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240104 13:57:20.429" endtime="20240104 13:57:20.429"/>
</return>
<msg timestamp="20240104 13:57:20.429" level="INFO">${text} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.423" endtime="20240104 13:57:20.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.431" level="INFO">${name} = CT_54 Dolores placeat placeat animi.</msg>
<status status="PASS" starttime="20240104 13:57:20.430" endtime="20240104 13:57:20.431"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:20.532" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:20.432" endtime="20240104 13:57:20.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.534" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:20.533" endtime="20240104 13:57:20.534"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:20.539" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.534" endtime="20240104 13:57:20.539"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:20.544" endtime="20240104 13:57:20.544"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.539" endtime="20240104 13:57:20.544"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.539" endtime="20240104 13:57:20.544"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.432" endtime="20240104 13:57:20.544"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.545" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240104 13:57:20.545" endtime="20240104 13:57:20.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.546" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240104 13:57:20.546" endtime="20240104 13:57:20.546"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.546" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:20.546" endtime="20240104 13:57:20.547"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.547" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:20.547" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.547" endtime="20240104 13:57:20.547"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.549" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240104 13:57:20.548" endtime="20240104 13:57:20.549"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.549" level="INFO">Length is 1</msg>
<msg timestamp="20240104 13:57:20.549" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240104 13:57:20.549" endtime="20240104 13:57:20.550"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.550" endtime="20240104 13:57:20.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.551" endtime="20240104 13:57:20.551"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.550" endtime="20240104 13:57:20.551"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.551" endtime="20240104 13:57:20.552"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.553" endtime="20240104 13:57:20.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.553" endtime="20240104 13:57:20.553"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.551" endtime="20240104 13:57:20.553"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20240104 13:57:20.554" level="INFO">${new_text} = 7432</msg>
<status status="PASS" starttime="20240104 13:57:20.554" endtime="20240104 13:57:20.555"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240104 13:57:20.556" level="INFO">${new_text} = 7432</msg>
<status status="PASS" starttime="20240104 13:57:20.555" endtime="20240104 13:57:20.556"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.554" endtime="20240104 13:57:20.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.556"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.559" endtime="20240104 13:57:20.559"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.556" endtime="20240104 13:57:20.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.559" endtime="20240104 13:57:20.559"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.559" endtime="20240104 13:57:20.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.560" endtime="20240104 13:57:20.560"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.559" endtime="20240104 13:57:20.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.560" endtime="20240104 13:57:20.560"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.560" endtime="20240104 13:57:20.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.561" endtime="20240104 13:57:20.561"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.560" endtime="20240104 13:57:20.561"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.561" endtime="20240104 13:57:20.561"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.561" endtime="20240104 13:57:20.561"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.550" endtime="20240104 13:57:20.561"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.562" level="INFO">Length is 8</msg>
<msg timestamp="20240104 13:57:20.562" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240104 13:57:20.561" endtime="20240104 13:57:20.562"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240104 13:57:20.563" level="INFO">${text} = 7432</msg>
<status status="PASS" starttime="20240104 13:57:20.562" endtime="20240104 13:57:20.563"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.562" endtime="20240104 13:57:20.563"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.562" endtime="20240104 13:57:20.563"/>
</if>
<msg timestamp="20240104 13:57:20.563" level="INFO">${text} = 7432</msg>
<status status="PASS" starttime="20240104 13:57:20.544" endtime="20240104 13:57:20.563"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240104 13:57:20.564" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240104 13:57:20.563" endtime="20240104 13:57:20.564"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:20.564" endtime="20240104 13:57:20.590"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240104 13:57:20.591" level="INFO">Fills the text '7432' in the given field.</msg>
<status status="PASS" starttime="20240104 13:57:20.591" endtime="20240104 13:57:20.611"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.611" level="INFO">Length is 4</msg>
<msg timestamp="20240104 13:57:20.612" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20240104 13:57:20.611" endtime="20240104 13:57:20.612"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240104 13:57:20.612" level="INFO">${STATE["Thứ tự"]} = 7432</msg>
<status status="PASS" starttime="20240104 13:57:20.612" endtime="20240104 13:57:20.613"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.612" endtime="20240104 13:57:20.613"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.612" endtime="20240104 13:57:20.613"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.431" endtime="20240104 13:57:20.613"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:20.714" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:20.614" endtime="20240104 13:57:20.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.714" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:20.714" endtime="20240104 13:57:20.714"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:20.722" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.715" endtime="20240104 13:57:20.722"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:20.723" endtime="20240104 13:57:20.723"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.722" endtime="20240104 13:57:20.723"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.722" endtime="20240104 13:57:20.723"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.614" endtime="20240104 13:57:20.723"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.724" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240104 13:57:20.724" endtime="20240104 13:57:20.724"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.724" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240104 13:57:20.724" endtime="20240104 13:57:20.725"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.725" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:20.725" endtime="20240104 13:57:20.725"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.725" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:20.726" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.725" endtime="20240104 13:57:20.726"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.726" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240104 13:57:20.726" endtime="20240104 13:57:20.726"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.726" level="INFO">Length is 1</msg>
<msg timestamp="20240104 13:57:20.727" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240104 13:57:20.726" endtime="20240104 13:57:20.727"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.727" endtime="20240104 13:57:20.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.727" endtime="20240104 13:57:20.727"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.727" endtime="20240104 13:57:20.728"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.728" endtime="20240104 13:57:20.728"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.728" endtime="20240104 13:57:20.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.728" endtime="20240104 13:57:20.729"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.728" endtime="20240104 13:57:20.729"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.729" endtime="20240104 13:57:20.729"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.729" endtime="20240104 13:57:20.730"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.729" endtime="20240104 13:57:20.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.730" endtime="20240104 13:57:20.730"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.731" endtime="20240104 13:57:20.731"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.730" endtime="20240104 13:57:20.731"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.732" endtime="20240104 13:57:20.732"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.731" endtime="20240104 13:57:20.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240104 13:57:20.732" endtime="20240104 13:57:20.733"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.732" endtime="20240104 13:57:20.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.733" endtime="20240104 13:57:20.733"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.733" endtime="20240104 13:57:20.733"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.733" endtime="20240104 13:57:20.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.734" endtime="20240104 13:57:20.735"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.734" endtime="20240104 13:57:20.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.736" endtime="20240104 13:57:20.737"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.735" endtime="20240104 13:57:20.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.737" endtime="20240104 13:57:20.737"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.737" endtime="20240104 13:57:20.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20240104 13:57:20.738" level="INFO">${new_text} = Velit.</msg>
<status status="PASS" starttime="20240104 13:57:20.738" endtime="20240104 13:57:20.738"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.738" endtime="20240104 13:57:20.738"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.739" endtime="20240104 13:57:20.739"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.738" endtime="20240104 13:57:20.739"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.727" endtime="20240104 13:57:20.739"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.739" level="INFO">Length is 8</msg>
<msg timestamp="20240104 13:57:20.739" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240104 13:57:20.739" endtime="20240104 13:57:20.739"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240104 13:57:20.741" level="INFO">${text} = Velit.</msg>
<status status="PASS" starttime="20240104 13:57:20.741" endtime="20240104 13:57:20.741"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.741" endtime="20240104 13:57:20.741"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.741" endtime="20240104 13:57:20.741"/>
</if>
<msg timestamp="20240104 13:57:20.742" level="INFO">${text} = Velit.</msg>
<status status="PASS" starttime="20240104 13:57:20.723" endtime="20240104 13:57:20.742"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240104 13:57:20.742" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240104 13:57:20.742" endtime="20240104 13:57:20.742"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:20.742" endtime="20240104 13:57:20.778"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240104 13:57:20.780" level="INFO">Fills the text 'Velit.' in the given field.</msg>
<status status="PASS" starttime="20240104 13:57:20.779" endtime="20240104 13:57:20.805"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.806" level="INFO">Length is 6</msg>
<msg timestamp="20240104 13:57:20.807" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240104 13:57:20.806" endtime="20240104 13:57:20.807"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240104 13:57:20.808" level="INFO">${STATE["Mã"]} = Velit.</msg>
<status status="PASS" starttime="20240104 13:57:20.807" endtime="20240104 13:57:20.808"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.807" endtime="20240104 13:57:20.808"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.807" endtime="20240104 13:57:20.808"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.613" endtime="20240104 13:57:20.808"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.810" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240104 13:57:20.810" endtime="20240104 13:57:20.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.811" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240104 13:57:20.811" endtime="20240104 13:57:20.811"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.812" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:20.811" endtime="20240104 13:57:20.812"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.813" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:20.813" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.812" endtime="20240104 13:57:20.813"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:20.814" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240104 13:57:20.813" endtime="20240104 13:57:20.814"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.814" level="INFO">Length is 1</msg>
<msg timestamp="20240104 13:57:20.814" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240104 13:57:20.814" endtime="20240104 13:57:20.814"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.815" endtime="20240104 13:57:20.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.815" endtime="20240104 13:57:20.815"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.815" endtime="20240104 13:57:20.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.816" endtime="20240104 13:57:20.816"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.817" endtime="20240104 13:57:20.817"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.817" endtime="20240104 13:57:20.817"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.816" endtime="20240104 13:57:20.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.818" endtime="20240104 13:57:20.818"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.818" endtime="20240104 13:57:20.818"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.817" endtime="20240104 13:57:20.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.819" endtime="20240104 13:57:20.819"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.819" endtime="20240104 13:57:20.819"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.819" endtime="20240104 13:57:20.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20240104 13:57:20.821" level="INFO">${new_text} = Labore eligendi fugiat blanditiis quasi soluta accusantium voluptates. Voluptatibus amet earum aliquam ipsum.</msg>
<status status="PASS" starttime="20240104 13:57:20.820" endtime="20240104 13:57:20.821"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.820" endtime="20240104 13:57:20.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240104 13:57:20.821" endtime="20240104 13:57:20.821"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.821" endtime="20240104 13:57:20.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.822" endtime="20240104 13:57:20.822"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.822" endtime="20240104 13:57:20.822"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.822" endtime="20240104 13:57:20.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.823" endtime="20240104 13:57:20.823"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.823" endtime="20240104 13:57:20.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.823" endtime="20240104 13:57:20.825"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.823" endtime="20240104 13:57:20.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.825" endtime="20240104 13:57:20.825"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.825" endtime="20240104 13:57:20.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.826" endtime="20240104 13:57:20.826"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.826" endtime="20240104 13:57:20.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.827" endtime="20240104 13:57:20.827"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.826" endtime="20240104 13:57:20.827"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.815" endtime="20240104 13:57:20.827"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.828" level="INFO">Length is 8</msg>
<msg timestamp="20240104 13:57:20.828" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240104 13:57:20.827" endtime="20240104 13:57:20.828"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240104 13:57:20.829" level="INFO">${text} = Labore eligendi fugiat blanditiis quasi soluta accusantium voluptates. Voluptatibus amet earum aliquam ipsum.</msg>
<status status="PASS" starttime="20240104 13:57:20.829" endtime="20240104 13:57:20.829"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.828" endtime="20240104 13:57:20.829"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.828" endtime="20240104 13:57:20.830"/>
</if>
<msg timestamp="20240104 13:57:20.830" level="INFO">${text} = Labore eligendi fugiat blanditiis quasi soluta accusantium voluptates. Voluptatibus amet earum aliquam ipsum.</msg>
<status status="PASS" starttime="20240104 13:57:20.809" endtime="20240104 13:57:20.830"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20240104 13:57:20.831" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20240104 13:57:20.830" endtime="20240104 13:57:20.831"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:20.831" endtime="20240104 13:57:20.859"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240104 13:57:20.860" level="INFO">Fills the text 'Labore eligendi fugiat blanditiis quasi soluta accusantium voluptates. Voluptatibus amet earum aliquam ipsum.' in the given field.</msg>
<status status="PASS" starttime="20240104 13:57:20.860" endtime="20240104 13:57:20.885"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:20.887" level="INFO">Length is 109</msg>
<msg timestamp="20240104 13:57:20.887" level="INFO">${cnt} = 109</msg>
<status status="PASS" starttime="20240104 13:57:20.887" endtime="20240104 13:57:20.887"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240104 13:57:20.890" level="INFO">${STATE["Mô tả"]} = Labore eligendi fugiat blanditiis quasi soluta accusantium voluptates. Voluptatibus amet earum aliquam ipsum.</msg>
<status status="PASS" starttime="20240104 13:57:20.889" endtime="20240104 13:57:20.890"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.887" endtime="20240104 13:57:20.890"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.887" endtime="20240104 13:57:20.890"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.809" endtime="20240104 13:57:20.890"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:20.891" endtime="20240104 13:57:20.963"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:20.963" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240104 13:57:20.963" endtime="20240104 13:57:20.963"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:20.973" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:20.963" endtime="20240104 13:57:20.973"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.973" endtime="20240104 13:57:20.973"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240104 13:57:20.973" endtime="20240104 13:57:20.973"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:20.973" endtime="20240104 13:57:20.973"/>
</branch>
<status status="PASS" starttime="20240104 13:57:20.973" endtime="20240104 13:57:20.973"/>
</if>
<status status="PASS" starttime="20240104 13:57:20.963" endtime="20240104 13:57:20.973"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240104 13:57:20.985" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.986" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.995" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.995" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240104 13:57:20.999" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240104 13:57:20.973" endtime="20240104 13:57:21.000"/>
</kw>
<status status="PASS" starttime="20240104 13:57:20.890" endtime="20240104 13:57:21.000"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:21.001" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240104 13:57:21.001" endtime="20240104 13:57:21.001"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:21.002" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:21.003" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240104 13:57:21.002" endtime="20240104 13:57:21.003"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:21.003" endtime="20240104 13:57:21.003"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:21.003" endtime="20240104 13:57:21.003"/>
</branch>
<status status="PASS" starttime="20240104 13:57:21.003" endtime="20240104 13:57:21.003"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240104 13:57:21.129" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240104 13:57:21.004" endtime="20240104 13:57:21.129"/>
</kw>
<status status="PASS" starttime="20240104 13:57:21.003" endtime="20240104 13:57:21.129"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240104 13:57:21.211" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240104 13:57:21.131" endtime="20240104 13:57:21.211"/>
</kw>
<status status="PASS" starttime="20240104 13:57:21.130" endtime="20240104 13:57:21.211"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:21.212" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240104 13:57:21.211" endtime="20240104 13:57:21.212"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240104 13:57:21.502" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240104 13:57:21.503" level="INFO">See also file:///D:/Automation%20Testing/playwright-log.txt for additional details.</msg>
<msg timestamp="20240104 13:57:21.504" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240104 13:57:21.212" endtime="20240104 13:57:21.504"/>
</kw>
<status status="FAIL" starttime="20240104 13:57:21.212" endtime="20240104 13:57:21.504"/>
</kw>
<msg timestamp="20240104 13:57:21.504" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240104 13:57:21.212" endtime="20240104 13:57:21.504"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</branch>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</if>
<status status="PASS" starttime="20240104 13:57:21.000" endtime="20240104 13:57:21.504"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</return>
<status status="PASS" starttime="20240104 13:57:16.544" endtime="20240104 13:57:21.504"/>
</kw>
<kw name="When Select on the &quot;Nhóm thủ thuật&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:21.504" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:21.504" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:21.504" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</branch>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</return>
<msg timestamp="20240104 13:57:21.504" level="INFO">${text} = Nhóm thủ thuật</msg>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.504"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:21.604" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:21.604" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:21.604" endtime="20240104 13:57:21.604"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:21.604" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:21.604" endtime="20240104 13:57:21.604"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:21.604" endtime="20240104 13:57:21.604"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:21.604" endtime="20240104 13:57:21.604"/>
</branch>
<status status="PASS" starttime="20240104 13:57:21.604" endtime="20240104 13:57:21.604"/>
</if>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:21.604"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<return>
<value>xpath=//*[contains(@class, "item-text") and contains(text(), "${name}")]/ancestor::*[contains(@class, "item")]${xpath}</value>
<status status="PASS" starttime="20240104 13:57:21.612" endtime="20240104 13:57:21.612"/>
</return>
<msg timestamp="20240104 13:57:21.612" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Nhóm thủ thuật")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20240104 13:57:21.612" endtime="20240104 13:57:21.612"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240104 13:57:21.612" endtime="20240104 13:57:23.198"/>
</kw>
<status status="PASS" starttime="20240104 13:57:21.504" endtime="20240104 13:57:23.198"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Nhóm thủ thuật&quot; table line with cancel" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line with cancel">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240104 13:57:23.298" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240104 13:57:23.198" endtime="20240104 13:57:23.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240104 13:57:23.298" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240104 13:57:23.298" endtime="20240104 13:57:23.298"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240104 13:57:23.300" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240104 13:57:23.298" endtime="20240104 13:57:23.300"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.300"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.300"/>
</branch>
<status status="PASS" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.300"/>
</if>
<status status="PASS" starttime="20240104 13:57:23.198" endtime="20240104 13:57:23.300"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240104 13:57:23.300" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.300"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240104 13:57:23.300" level="INFO">Length is 0</msg>
<msg timestamp="20240104 13:57:23.300" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.300"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240104 13:57:23.312" endtime="20240104 13:57:23.312"/>
</kw>
<status status="NOT RUN" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.312"/>
</branch>
<status status="PASS" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.312"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240104 13:57:23.312" endtime="20240104 13:57:23.312"/>
</return>
<msg timestamp="20240104 13:57:23.313" level="INFO">${name} = Nhóm thủ thuật</msg>
<status status="PASS" starttime="20240104 13:57:23.300" endtime="20240104 13:57:23.313"/>
</kw>
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "${name}")]/ancestor::tr${xpath}</value>
<status status="PASS" starttime="20240104 13:57:23.313" endtime="20240104 13:57:23.313"/>
</return>
<msg timestamp="20240104 13:57:23.313" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "Nhóm thủ thuật")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20240104 13:57:23.313" endtime="20240104 13:57:23.314"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20240104 13:57:33.476" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240104 13:57:33.476" level="INFO">See also file:///D:/Automation%20Testing/playwright-log.txt for additional details.</msg>
<msg timestamp="20240104 13:57:33.476" level="FAIL">TimeoutError: locator.click: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "Nhóm thủ thuật")]/ancestor::tr//button[@title = "Xóa"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240104 13:57:23.314" endtime="20240104 13:57:33.481"/>
</kw>
<kw name="Click Cancel Action" library="common">
<status status="NOT RUN" starttime="20240104 13:57:33.481" endtime="20240104 13:57:33.482"/>
</kw>
<status status="FAIL" starttime="20240104 13:57:23.198" endtime="20240104 13:57:33.482"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<status status="NOT RUN" starttime="20240104 13:57:33.482" endtime="20240104 13:57:33.484"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<status status="NOT RUN" starttime="20240104 13:57:33.485" endtime="20240104 13:57:33.485"/>
</kw>
<kw name="Then User look message &quot;Đã xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20240104 13:57:33.485" endtime="20240104 13:57:33.486"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20240104 13:57:33.534" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20240104 13:57:33.487" endtime="20240104 13:57:33.534"/>
</kw>
<status status="PASS" starttime="20240104 13:57:33.486" endtime="20240104 13:57:33.534"/>
</kw>
<tag>Delete</tag>
<status status="FAIL" starttime="20240104 13:57:12.822" endtime="20240104 13:57:33.534">TimeoutError: locator.click: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "Nhóm thủ thuật")]/ancestor::tr//button[@title = "Xóa"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<status status="FAIL" starttime="20240104 13:57:11.757" endtime="20240104 13:57:33.578"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">Delete</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Code Type">Code Type</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
