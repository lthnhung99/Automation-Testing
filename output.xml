<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.0 on win32)" generated="20240105 19:49:43.354" rpa="false" schemaversion="4">
<suite id="s1" name="Code Type" source="d:\Automation Testing\test\test\testcases\code_type.robot">
<test id="s1-t1" name="CT_44 Verify the changing &quot;Mô tả&quot; field" line="573">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20240105 19:49:44.590" endtime="20240105 19:49:44.590"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20240105 19:49:44.590" level="INFO">{"browser": "chromium", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Automation Testing\\browser\\traces\\afe615ac-0c6a-4ae9-a458-0843cb64717f"}</msg>
<msg timestamp="20240105 19:49:45.145" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Automation Testing\\browser\\traces\\afe615ac-0c6a-4ae9-a458-0843cb64717f"}</msg>
<status status="PASS" starttime="20240105 19:49:44.590" endtime="20240105 19:49:45.145"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20240105 19:49:49.526" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20240105 19:49:49.526" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20240105 19:49:45.145" endtime="20240105 19:49:49.526"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240105 19:49:49.526" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20240105 19:49:49.526" endtime="20240105 19:49:49.526"/>
</kw>
<status status="PASS" starttime="20240105 19:49:44.590" endtime="20240105 19:49:49.526"/>
</kw>
<kw name="Create a test data with &quot;Nhóm thủ thuật&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Danh mục" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Danh mục&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:49.599" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 19:49:49.534" endtime="20240105 19:49:49.599"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240105 19:49:49.599" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20240105 19:49:49.599" endtime="20240105 19:49:49.599"/>
</kw>
<status status="FAIL" starttime="20240105 19:49:49.534" endtime="20240105 19:49:49.599"/>
</kw>
<msg timestamp="20240105 19:49:49.599" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20240105 19:49:49.534" endtime="20240105 19:49:49.599"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Select on the &quot;${type}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 19:49:49.599" endtime="20240105 19:49:49.599"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20240105 19:49:49.599" endtime="20240105 19:49:49.599"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.599" endtime="20240105 19:49:49.599"/>
</branch>
<branch type="ELSE">
<if>
<branch type="IF" condition="'${type}' == 'Nhóm thủ thuật'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_PROCEDURE_GROUP&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:49.707" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:49.607" endtime="20240105 19:49:49.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:49.707" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:49.707" endtime="20240105 19:49:49.707"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:49.721" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:49.707" endtime="20240105 19:49:49.721"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:49.721" endtime="20240105 19:49:49.721"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.721" endtime="20240105 19:49:49.721"/>
</branch>
<status status="PASS" starttime="20240105 19:49:49.721" endtime="20240105 19:49:49.721"/>
</if>
<status status="PASS" starttime="20240105 19:49:49.607" endtime="20240105 19:49:49.721"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:49.729" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:49.729" endtime="20240105 19:49:49.729"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:49.732" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:49.732" endtime="20240105 19:49:49.732"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:49.732" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:49.732" endtime="20240105 19:49:49.732"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:49.732" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:49.732" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:49.732" endtime="20240105 19:49:49.732"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:49.737" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 19:49:49.737" endtime="20240105 19:49:49.737"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:49.737" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:49.737" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 19:49:49.737" endtime="20240105 19:49:49.737"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.737" endtime="20240105 19:49:49.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.745" endtime="20240105 19:49:49.745"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.737" endtime="20240105 19:49:49.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.769"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.769"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.769"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.745" endtime="20240105 19:49:49.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.769"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.769"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.769" endtime="20240105 19:49:49.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.777"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.777" endtime="20240105 19:49:49.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.785"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.785"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.785"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.785" endtime="20240105 19:49:49.793"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</branch>
<status status="PASS" starttime="20240105 19:49:49.737" endtime="20240105 19:49:49.793"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:49.793" level="INFO">Length is 15</msg>
<msg timestamp="20240105 19:49:49.793" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:49.793" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</kw>
<status status="PASS" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</branch>
<status status="PASS" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</if>
<msg timestamp="20240105 19:49:49.793" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20240105 19:49:49.729" endtime="20240105 19:49:49.793"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 19:49:49.793" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.793"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:49.793" endtime="20240105 19:49:49.857"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:49.857" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:49.857" endtime="20240105 19:49:49.899"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:49.899" level="INFO">Length is 15</msg>
<msg timestamp="20240105 19:49:49.899" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20240105 19:49:49.899" endtime="20240105 19:49:49.899"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:49.906" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20240105 19:49:49.906" endtime="20240105 19:49:49.906"/>
</kw>
<status status="PASS" starttime="20240105 19:49:49.906" endtime="20240105 19:49:49.906"/>
</branch>
<status status="PASS" starttime="20240105 19:49:49.906" endtime="20240105 19:49:49.906"/>
</if>
<status status="PASS" starttime="20240105 19:49:49.607" endtime="20240105 19:49:49.906"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:50.007" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:49.906" endtime="20240105 19:49:50.007"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:50.007" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:50.007" endtime="20240105 19:49:50.007"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:50.020" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:50.007" endtime="20240105 19:49:50.020"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.020"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.020"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.020"/>
</if>
<status status="PASS" starttime="20240105 19:49:49.906" endtime="20240105 19:49:50.020"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:50.020" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:50.020" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.020"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:50.020" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:50.028" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:50.028" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:50.028" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:50.028" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:50.028" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.036"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.028" endtime="20240105 19:49:50.036"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:50.044" level="INFO">Length is 6</msg>
<msg timestamp="20240105 19:49:50.044" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240105 19:49:50.036" endtime="20240105 19:49:50.044"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:50.044" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20240105 19:49:50.044" endtime="20240105 19:49:50.044"/>
</kw>
<status status="PASS" starttime="20240105 19:49:50.044" endtime="20240105 19:49:50.044"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.044" endtime="20240105 19:49:50.044"/>
</if>
<msg timestamp="20240105 19:49:50.044" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20240105 19:49:50.020" endtime="20240105 19:49:50.044"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 19:49:50.044" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 19:49:50.044" endtime="20240105 19:49:50.044"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:50.044" endtime="20240105 19:49:50.084"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:50.084" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:50.084" endtime="20240105 19:49:50.124"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:50.124" level="INFO">Length is 6</msg>
<msg timestamp="20240105 19:49:50.124" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240105 19:49:50.124" endtime="20240105 19:49:50.124"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:50.124" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20240105 19:49:50.124" endtime="20240105 19:49:50.124"/>
</kw>
<status status="PASS" starttime="20240105 19:49:50.124" endtime="20240105 19:49:50.132"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.124" endtime="20240105 19:49:50.132"/>
</if>
<status status="PASS" starttime="20240105 19:49:49.906" endtime="20240105 19:49:50.132"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:50.132" endtime="20240105 19:49:50.268"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:50.276" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:49:50.276" endtime="20240105 19:49:50.276"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:50.284" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:50.276" endtime="20240105 19:49:50.284"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.284" endtime="20240105 19:49:50.284"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.284" endtime="20240105 19:49:50.284"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.284" endtime="20240105 19:49:50.284"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.284" endtime="20240105 19:49:50.284"/>
</if>
<status status="PASS" starttime="20240105 19:49:50.268" endtime="20240105 19:49:50.284"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 19:49:50.300" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:50.300" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:50.316" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:50.316" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:50.324" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 19:49:50.284" endtime="20240105 19:49:50.324"/>
</kw>
<status status="PASS" starttime="20240105 19:49:50.132" endtime="20240105 19:49:50.324"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:50.324" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.324"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:50.324" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:50.324" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.324"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.324"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.324"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.324"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 19:49:50.448" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240105 19:49:50.332" endtime="20240105 19:49:50.448"/>
</kw>
<status status="PASS" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.449"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 19:49:50.502" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240105 19:49:50.449" endtime="20240105 19:49:50.502"/>
</kw>
<status status="PASS" starttime="20240105 19:49:50.449" endtime="20240105 19:49:50.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:50.505" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240105 19:49:50.502" endtime="20240105 19:49:50.505"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 19:49:50.880" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240105 19:49:50.880" level="INFO">See also file:///D:/Automation%20Testing/playwright-log.txt for additional details.</msg>
<msg timestamp="20240105 19:49:50.880" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240105 19:49:50.505" endtime="20240105 19:49:50.888"/>
</kw>
<status status="FAIL" starttime="20240105 19:49:50.505" endtime="20240105 19:49:50.888"/>
</kw>
<msg timestamp="20240105 19:49:50.888" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240105 19:49:50.505" endtime="20240105 19:49:50.888"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:50.888" endtime="20240105 19:49:50.888"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:50.888" endtime="20240105 19:49:50.888"/>
</branch>
<status status="PASS" starttime="20240105 19:49:50.888" endtime="20240105 19:49:50.888"/>
</if>
<status status="PASS" starttime="20240105 19:49:50.324" endtime="20240105 19:49:50.888"/>
</kw>
<status status="PASS" starttime="20240105 19:49:49.607" endtime="20240105 19:49:50.888"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:50.896" endtime="20240105 19:49:52.504"/>
</kw>
<status status="PASS" starttime="20240105 19:49:50.888" endtime="20240105 19:49:52.504"/>
</kw>
<kw name="Click &quot;Danh mục&quot; sub menu to &quot;/code-types&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:52.605" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:52.504" endtime="20240105 19:49:52.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:52.605" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:52.605" endtime="20240105 19:49:52.605"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:52.627" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:52.605" endtime="20240105 19:49:52.627"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:52.627" endtime="20240105 19:49:52.627"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:52.627" endtime="20240105 19:49:52.627"/>
</branch>
<status status="PASS" starttime="20240105 19:49:52.627" endtime="20240105 19:49:52.627"/>
</if>
<status status="PASS" starttime="20240105 19:49:52.504" endtime="20240105 19:49:52.627"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:52.627" endtime="20240105 19:49:52.843"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20240105 19:49:52.847" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/code-types?filter=%7B%22type%22:%22MEDICAL_PROCEDURE_GROUP%22%7D</msg>
<status status="PASS" starttime="20240105 19:49:52.843" endtime="20240105 19:49:52.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:49:52.847" endtime="20240105 19:49:52.851"/>
</kw>
<status status="PASS" starttime="20240105 19:49:52.504" endtime="20240105 19:49:52.851"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '/MEDICAL_PROCEDURE_GROUP'">
<kw name="Select on the &quot;Nhóm thủ thuật&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:52.851" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:52.851" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:52.851" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</branch>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</return>
<msg timestamp="20240105 19:49:52.851" level="INFO">${text} = Nhóm thủ thuật</msg>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.851"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:52.960" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:52.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:52.960" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:52.960" endtime="20240105 19:49:52.960"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:53.005" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:52.960" endtime="20240105 19:49:53.005"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:53.005" endtime="20240105 19:49:53.005"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.005" endtime="20240105 19:49:53.005"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.005" endtime="20240105 19:49:53.005"/>
</if>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:53.005"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<return>
<value>xpath=//*[contains(@class, "item-text") and contains(text(), "${name}")]/ancestor::*[contains(@class, "item")]${xpath}</value>
<status status="PASS" starttime="20240105 19:49:53.013" endtime="20240105 19:49:53.013"/>
</return>
<msg timestamp="20240105 19:49:53.013" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Nhóm thủ thuật")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20240105 19:49:53.005" endtime="20240105 19:49:53.013"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:53.013" endtime="20240105 19:49:53.399"/>
</kw>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:53.399"/>
</kw>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:53.399"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/MEDICAL_PROCEDURE_DIFFICULTY'">
<kw name="Select on the &quot;Độ khó&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.399"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.399"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/MEDICAL_DEGRE'">
<kw name="Select on the &quot;Bằng cấp chuyên môn&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.399"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.399"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/NUMBER_OF_TEETH'">
<kw name="Select on the &quot;Số răng&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.399"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.399"/>
</branch>
<status status="PASS" starttime="20240105 19:49:52.851" endtime="20240105 19:49:53.399"/>
</if>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.657"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:53.657" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:49:53.657" endtime="20240105 19:49:53.657"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:53.665" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:53.657" endtime="20240105 19:49:53.665"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.665" endtime="20240105 19:49:53.665"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.673" endtime="20240105 19:49:53.673"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.665" endtime="20240105 19:49:53.673"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.665" endtime="20240105 19:49:53.673"/>
</if>
<status status="PASS" starttime="20240105 19:49:53.657" endtime="20240105 19:49:53.673"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 19:49:53.705" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:53.713" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:53.729" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:53.729" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:53.745" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 19:49:53.673" endtime="20240105 19:49:53.745"/>
</kw>
<status status="PASS" starttime="20240105 19:49:53.399" endtime="20240105 19:49:53.745"/>
</kw>
<status status="PASS" starttime="20240105 19:49:49.607" endtime="20240105 19:49:53.745"/>
</kw>
<status status="PASS" starttime="20240105 19:49:49.599" endtime="20240105 19:49:53.745"/>
</branch>
<status status="PASS" starttime="20240105 19:49:49.599" endtime="20240105 19:49:53.745"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Độ khó'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_PROCEDURE_DIFFICULTY&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Bằng cấp chuyên môn'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_DEGRE&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Số răng'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/NUMBER_OF_TEETH&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.745"/>
</if>
<status status="PASS" starttime="20240105 19:49:49.599" endtime="20240105 19:49:53.745"/>
</branch>
<status status="PASS" starttime="20240105 19:49:49.599" endtime="20240105 19:49:53.745"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:53.853" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:53.753" endtime="20240105 19:49:53.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:53.853" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:53.853" endtime="20240105 19:49:53.853"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:53.868" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:53.853" endtime="20240105 19:49:53.868"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:53.868" endtime="20240105 19:49:53.868"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.868" endtime="20240105 19:49:53.868"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.868" endtime="20240105 19:49:53.868"/>
</if>
<status status="PASS" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.868"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:53.868" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:53.868" endtime="20240105 19:49:53.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:53.868" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:53.868" endtime="20240105 19:49:53.876"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:53.876" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:53.876" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:53.876" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:53.876" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:53.876" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:53.876" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20240105 19:49:53.884" level="INFO">${random} = Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:53.884" endtime="20240105 19:49:53.884"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240105 19:49:53.884" level="INFO">${words} = ['CT_44', 'Verify', 'the', 'changing', '"Mô', 'tả"', 'field']</msg>
<status status="PASS" starttime="20240105 19:49:53.884" endtime="20240105 19:49:53.884"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:53.884" level="INFO">${new_text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:53.884" endtime="20240105 19:49:53.884"/>
</kw>
<status status="PASS" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.900"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.892" endtime="20240105 19:49:53.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.908"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.900" endtime="20240105 19:49:53.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.908"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.908"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.876" endtime="20240105 19:49:53.908"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:53.908" level="INFO">Length is 8</msg>
<msg timestamp="20240105 19:49:53.908" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.908"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:53.908" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.908"/>
</kw>
<status status="PASS" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.908"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.908"/>
</if>
<msg timestamp="20240105 19:49:53.908" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:53.868" endtime="20240105 19:49:53.908"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 19:49:53.916" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 19:49:53.908" endtime="20240105 19:49:53.916"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:53.916" endtime="20240105 19:49:53.956"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:53.956" level="INFO">Fills the text 'CT_44 Inventore.' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:53.956" endtime="20240105 19:49:53.988"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:53.988" level="INFO">Length is 16</msg>
<msg timestamp="20240105 19:49:53.988" level="INFO">${cnt} = 16</msg>
<status status="PASS" starttime="20240105 19:49:53.988" endtime="20240105 19:49:53.988"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:53.988" level="INFO">${STATE["Tiêu đề"]} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:53.988" endtime="20240105 19:49:53.988"/>
</kw>
<status status="PASS" starttime="20240105 19:49:53.988" endtime="20240105 19:49:53.996"/>
</branch>
<status status="PASS" starttime="20240105 19:49:53.988" endtime="20240105 19:49:53.996"/>
</if>
<status status="PASS" starttime="20240105 19:49:53.745" endtime="20240105 19:49:53.996"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:53.996" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 19:49:53.996" endtime="20240105 19:49:53.996"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:53.996" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:54.000" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 19:49:53.996" endtime="20240105 19:49:54.000"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.000" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:54.000" endtime="20240105 19:49:54.000"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.000" endtime="20240105 19:49:54.000"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.000" endtime="20240105 19:49:54.004"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:49:54.004" endtime="20240105 19:49:54.004"/>
</return>
<msg timestamp="20240105 19:49:54.004" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:53.996" endtime="20240105 19:49:54.004"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.004" level="INFO">${name} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:54.004" endtime="20240105 19:49:54.004"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:54.105" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:54.004" endtime="20240105 19:49:54.105"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.105" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:54.105" endtime="20240105 19:49:54.105"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:54.111" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.105" endtime="20240105 19:49:54.111"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:54.111" endtime="20240105 19:49:54.111"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.111" endtime="20240105 19:49:54.111"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.111" endtime="20240105 19:49:54.111"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.004" endtime="20240105 19:49:54.111"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.111" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:54.111" endtime="20240105 19:49:54.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.119" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.119" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.119" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:54.119" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.119" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.119" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:54.119" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.119"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20240105 19:49:54.127" level="INFO">${new_text} = 1224</msg>
<status status="PASS" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240105 19:49:54.127" level="INFO">${new_text} = 1224</msg>
<status status="PASS" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.127" endtime="20240105 19:49:54.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.119" endtime="20240105 19:49:54.136"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.136" level="INFO">Length is 8</msg>
<msg timestamp="20240105 19:49:54.136" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:54.136" level="INFO">${text} = 1224</msg>
<status status="PASS" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</if>
<msg timestamp="20240105 19:49:54.136" level="INFO">${text} = 1224</msg>
<status status="PASS" starttime="20240105 19:49:54.111" endtime="20240105 19:49:54.136"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 19:49:54.136" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.136"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:54.136" endtime="20240105 19:49:54.168"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:54.176" level="INFO">Fills the text '1224' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:54.168" endtime="20240105 19:49:54.200"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.200" level="INFO">Length is 4</msg>
<msg timestamp="20240105 19:49:54.200" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20240105 19:49:54.200" endtime="20240105 19:49:54.200"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:54.200" level="INFO">${STATE["Thứ tự"]} = 1224</msg>
<status status="PASS" starttime="20240105 19:49:54.200" endtime="20240105 19:49:54.208"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.200" endtime="20240105 19:49:54.208"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.200" endtime="20240105 19:49:54.208"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.004" endtime="20240105 19:49:54.208"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:54.308" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:54.208" endtime="20240105 19:49:54.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.308" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:54.308" endtime="20240105 19:49:54.308"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:54.314" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.308" endtime="20240105 19:49:54.314"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.208" endtime="20240105 19:49:54.314"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.314" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.314" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.314" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.314" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:54.314" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.314" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.314"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.322" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:54.322" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.322"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20240105 19:49:54.330" level="INFO">${new_text} = Expedita.</msg>
<status status="PASS" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.322" endtime="20240105 19:49:54.330"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.330" level="INFO">Length is 8</msg>
<msg timestamp="20240105 19:49:54.330" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:54.330" level="INFO">${text} = Expedita.</msg>
<status status="PASS" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.330" endtime="20240105 19:49:54.330"/>
</if>
<msg timestamp="20240105 19:49:54.338" level="INFO">${text} = Expedita.</msg>
<status status="PASS" starttime="20240105 19:49:54.314" endtime="20240105 19:49:54.338"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 19:49:54.338" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 19:49:54.338" endtime="20240105 19:49:54.338"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:54.338" endtime="20240105 19:49:54.362"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:54.370" level="INFO">Fills the text 'Expedita.' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:54.370" endtime="20240105 19:49:54.394"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.402" level="INFO">Length is 9</msg>
<msg timestamp="20240105 19:49:54.402" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20240105 19:49:54.402" endtime="20240105 19:49:54.402"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:54.402" level="INFO">${STATE["Mã"]} = Expedita.</msg>
<status status="PASS" starttime="20240105 19:49:54.402" endtime="20240105 19:49:54.402"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.402" endtime="20240105 19:49:54.402"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.402" endtime="20240105 19:49:54.402"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.208" endtime="20240105 19:49:54.402"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.410" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:54.410" endtime="20240105 19:49:54.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.410" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:54.410" endtime="20240105 19:49:54.410"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.410" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:54.410" endtime="20240105 19:49:54.410"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.410" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:54.410" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.410" endtime="20240105 19:49:54.410"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.410" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 19:49:54.410" endtime="20240105 19:49:54.410"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.410" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:54.410" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 19:49:54.410" endtime="20240105 19:49:54.410"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20240105 19:49:54.426" level="INFO">${new_text} = In sunt voluptate delectus ducimus rerum. Nobis eaque illum perferendis. Sunt pariatur nemo perferendis.</msg>
<status status="PASS" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.434" endtime="20240105 19:49:54.434"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.426" endtime="20240105 19:49:54.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.442" endtime="20240105 19:49:54.442"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.434" endtime="20240105 19:49:54.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.442" endtime="20240105 19:49:54.442"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.442" endtime="20240105 19:49:54.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.450" endtime="20240105 19:49:54.450"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.442" endtime="20240105 19:49:54.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.450" endtime="20240105 19:49:54.450"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.450" endtime="20240105 19:49:54.450"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.418" endtime="20240105 19:49:54.450"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.450" level="INFO">Length is 8</msg>
<msg timestamp="20240105 19:49:54.450" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 19:49:54.450" endtime="20240105 19:49:54.450"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:54.466" level="INFO">${text} = In sunt voluptate delectus ducimus rerum. Nobis eaque illum perferendis. Sunt pariatur nemo perferendis.</msg>
<status status="PASS" starttime="20240105 19:49:54.458" endtime="20240105 19:49:54.466"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.458" endtime="20240105 19:49:54.466"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.458" endtime="20240105 19:49:54.466"/>
</if>
<msg timestamp="20240105 19:49:54.466" level="INFO">${text} = In sunt voluptate delectus ducimus rerum. Nobis eaque illum perferendis. Sunt pariatur nemo perferendis.</msg>
<status status="PASS" starttime="20240105 19:49:54.402" endtime="20240105 19:49:54.466"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20240105 19:49:54.466" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20240105 19:49:54.466" endtime="20240105 19:49:54.466"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:54.466" endtime="20240105 19:49:54.498"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:54.506" level="INFO">Fills the text 'In sunt voluptate delectus ducimus rerum. Nobis eaque illum perferendis. Sunt pariatur nemo perferendis.' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:54.506" endtime="20240105 19:49:54.530"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.530" level="INFO">Length is 104</msg>
<msg timestamp="20240105 19:49:54.530" level="INFO">${cnt} = 104</msg>
<status status="PASS" starttime="20240105 19:49:54.530" endtime="20240105 19:49:54.530"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:54.538" level="INFO">${STATE["Mô tả"]} = In sunt voluptate delectus ducimus rerum. Nobis eaque illum perferendis. Sunt pariatur nemo perferendis.</msg>
<status status="PASS" starttime="20240105 19:49:54.538" endtime="20240105 19:49:54.538"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.538" endtime="20240105 19:49:54.538"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.538" endtime="20240105 19:49:54.538"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.402" endtime="20240105 19:49:54.538"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:54.538" endtime="20240105 19:49:54.659"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:54.659" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:49:54.659" endtime="20240105 19:49:54.659"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:54.679" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.667" endtime="20240105 19:49:54.679"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.683" endtime="20240105 19:49:54.683"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.683" endtime="20240105 19:49:54.683"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.679" endtime="20240105 19:49:54.683"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.679" endtime="20240105 19:49:54.683"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.659" endtime="20240105 19:49:54.683"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 19:49:54.694" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:54.699" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:54.707" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:54.707" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:54.715" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 19:49:54.683" endtime="20240105 19:49:54.715"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.538" endtime="20240105 19:49:54.715"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:54.715" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 19:49:54.715" endtime="20240105 19:49:54.715"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:54.715" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:54.715" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 19:49:54.715" endtime="20240105 19:49:54.715"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:54.715" endtime="20240105 19:49:54.715"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:54.715" endtime="20240105 19:49:54.715"/>
</branch>
<status status="PASS" starttime="20240105 19:49:54.715" endtime="20240105 19:49:54.715"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 19:49:54.964" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240105 19:49:54.723" endtime="20240105 19:49:54.964"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.715" endtime="20240105 19:49:54.964"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 19:49:55.012" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240105 19:49:54.972" endtime="20240105 19:49:55.012"/>
</kw>
<status status="PASS" starttime="20240105 19:49:54.964" endtime="20240105 19:49:55.012"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:55.020" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240105 19:49:55.020" endtime="20240105 19:49:55.020"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 19:49:55.473" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240105 19:49:55.473" level="INFO">See also file:///D:/Automation%20Testing/playwright-log.txt for additional details.</msg>
<msg timestamp="20240105 19:49:55.473" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240105 19:49:55.020" endtime="20240105 19:49:55.481"/>
</kw>
<status status="FAIL" starttime="20240105 19:49:55.020" endtime="20240105 19:49:55.481"/>
</kw>
<msg timestamp="20240105 19:49:55.481" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240105 19:49:55.020" endtime="20240105 19:49:55.481"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:55.481" endtime="20240105 19:49:55.481"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:55.481" endtime="20240105 19:49:55.481"/>
</branch>
<status status="PASS" starttime="20240105 19:49:55.481" endtime="20240105 19:49:55.481"/>
</if>
<status status="PASS" starttime="20240105 19:49:54.715" endtime="20240105 19:49:55.481"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" starttime="20240105 19:49:55.481" endtime="20240105 19:49:55.481"/>
</return>
<status status="PASS" starttime="20240105 19:49:49.526" endtime="20240105 19:49:55.481"/>
</kw>
<kw name="When Select on the &quot;Nhóm thủ thuật&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:55.489" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:55.489" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:55.489" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</branch>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</return>
<msg timestamp="20240105 19:49:55.489" level="INFO">${text} = Nhóm thủ thuật</msg>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.489"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:55.589" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:55.589" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:55.589" endtime="20240105 19:49:55.589"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:55.602" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:55.594" endtime="20240105 19:49:55.602"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:55.602" endtime="20240105 19:49:55.602"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:55.602" endtime="20240105 19:49:55.602"/>
</branch>
<status status="PASS" starttime="20240105 19:49:55.602" endtime="20240105 19:49:55.602"/>
</if>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:55.602"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<return>
<value>xpath=//*[contains(@class, "item-text") and contains(text(), "${name}")]/ancestor::*[contains(@class, "item")]${xpath}</value>
<status status="PASS" starttime="20240105 19:49:55.602" endtime="20240105 19:49:55.602"/>
</return>
<msg timestamp="20240105 19:49:55.602" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Nhóm thủ thuật")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20240105 19:49:55.602" endtime="20240105 19:49:55.602"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:55.602" endtime="20240105 19:49:56.700"/>
</kw>
<status status="PASS" starttime="20240105 19:49:55.489" endtime="20240105 19:49:56.700"/>
</kw>
<kw name="When Click on the &quot;Sửa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:56.801" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:56.700" endtime="20240105 19:49:56.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:56.801" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:56.801" endtime="20240105 19:49:56.801"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:56.810" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:56.801" endtime="20240105 19:49:56.810"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.817"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.817"/>
</branch>
<status status="PASS" starttime="20240105 19:49:56.810" endtime="20240105 19:49:56.817"/>
</if>
<status status="PASS" starttime="20240105 19:49:56.700" endtime="20240105 19:49:56.817"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:56.817" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.817"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:56.817" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:56.817" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.817"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:56.825" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.825"/>
</kw>
<status status="PASS" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.825"/>
</branch>
<status status="PASS" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.825"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</return>
<msg timestamp="20240105 19:49:56.825" level="INFO">${name} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:56.817" endtime="20240105 19:49:56.825"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</branch>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</if>
<status status="NOT RUN" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.825"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "${name}")]/ancestor::tr${xpath}</value>
<status status="PASS" starttime="20240105 19:49:56.833" endtime="20240105 19:49:56.833"/>
</return>
<msg timestamp="20240105 19:49:56.833" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "CT_44 Inventore.")]/ancestor::tr//button[@title = "Sửa"]</msg>
<status status="PASS" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.833"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:56.833" endtime="20240105 19:49:56.969"/>
</kw>
<status status="PASS" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.969"/>
</branch>
<status status="PASS" starttime="20240105 19:49:56.825" endtime="20240105 19:49:56.969"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:56.969" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:49:56.969" endtime="20240105 19:49:56.969"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:56.977" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:56.969" endtime="20240105 19:49:56.977"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.977" endtime="20240105 19:49:56.977"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.985" endtime="20240105 19:49:56.985"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.977" endtime="20240105 19:49:56.985"/>
</branch>
<status status="PASS" starttime="20240105 19:49:56.977" endtime="20240105 19:49:56.985"/>
</if>
<status status="PASS" starttime="20240105 19:49:56.969" endtime="20240105 19:49:56.985"/>
</kw>
<status status="PASS" starttime="20240105 19:49:56.700" endtime="20240105 19:49:56.985"/>
</kw>
<kw name="When Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:56.985" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 19:49:56.985" endtime="20240105 19:49:56.985"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:56.985" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 19:49:56.985" endtime="20240105 19:49:56.985"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:56.985" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 19:49:56.985" endtime="20240105 19:49:56.985"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:56.985" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:56.993" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 19:49:56.985" endtime="20240105 19:49:56.993"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:56.993" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:56.993" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:56.993" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:56.993" endtime="20240105 19:49:56.993"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20240105 19:49:57.001" level="INFO">${new_text} = Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.</msg>
<status status="PASS" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="PASS" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.009"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.001" endtime="20240105 19:49:57.009"/>
</branch>
<status status="PASS" starttime="20240105 19:49:56.993" endtime="20240105 19:49:57.009"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:57.009" level="INFO">Length is 8</msg>
<msg timestamp="20240105 19:49:57.009" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 19:49:57.009" endtime="20240105 19:49:57.009"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 19:49:57.009" level="INFO">${text} = Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.</msg>
<status status="PASS" starttime="20240105 19:49:57.009" endtime="20240105 19:49:57.009"/>
</kw>
<status status="PASS" starttime="20240105 19:49:57.009" endtime="20240105 19:49:57.009"/>
</branch>
<status status="PASS" starttime="20240105 19:49:57.009" endtime="20240105 19:49:57.009"/>
</if>
<msg timestamp="20240105 19:49:57.009" level="INFO">${text} = Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.</msg>
<status status="PASS" starttime="20240105 19:49:56.985" endtime="20240105 19:49:57.009"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20240105 19:49:57.009" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20240105 19:49:57.009" endtime="20240105 19:49:57.009"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:57.009" endtime="20240105 19:49:57.057"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 19:49:57.057" level="INFO">Fills the text 'Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.' in the given field.</msg>
<status status="PASS" starttime="20240105 19:49:57.057" endtime="20240105 19:49:57.145"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:57.145" level="INFO">Length is 116</msg>
<msg timestamp="20240105 19:49:57.145" level="INFO">${cnt} = 116</msg>
<status status="PASS" starttime="20240105 19:49:57.145" endtime="20240105 19:49:57.145"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 19:49:57.145" level="INFO">${STATE["Mô tả"]} = Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.</msg>
<status status="PASS" starttime="20240105 19:49:57.145" endtime="20240105 19:49:57.145"/>
</kw>
<status status="PASS" starttime="20240105 19:49:57.145" endtime="20240105 19:49:57.145"/>
</branch>
<status status="PASS" starttime="20240105 19:49:57.145" endtime="20240105 19:49:57.145"/>
</if>
<status status="PASS" starttime="20240105 19:49:56.985" endtime="20240105 19:49:57.145"/>
</kw>
<kw name="When Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:57.145" endtime="20240105 19:49:57.533"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:57.533" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:49:57.533" endtime="20240105 19:49:57.533"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:57.549" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:57.541" endtime="20240105 19:49:57.549"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.549" endtime="20240105 19:49:57.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.557" endtime="20240105 19:49:57.557"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.549" endtime="20240105 19:49:57.557"/>
</branch>
<status status="PASS" starttime="20240105 19:49:57.549" endtime="20240105 19:49:57.557"/>
</if>
<status status="PASS" starttime="20240105 19:49:57.533" endtime="20240105 19:49:57.557"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 19:49:57.573" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:57.573" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:57.742" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:57.742" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:49:57.814" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 19:49:57.557" endtime="20240105 19:49:57.822"/>
</kw>
<status status="PASS" starttime="20240105 19:49:57.145" endtime="20240105 19:49:57.822"/>
</kw>
<kw name="Then User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:57.822" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 19:49:57.822" endtime="20240105 19:49:57.826"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:57.826" level="INFO">Length is 0</msg>
<msg timestamp="20240105 19:49:57.826" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 19:49:57.826" endtime="20240105 19:49:57.826"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:57.826" endtime="20240105 19:49:57.826"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:57.826" endtime="20240105 19:49:57.826"/>
</branch>
<status status="PASS" starttime="20240105 19:49:57.826" endtime="20240105 19:49:57.826"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 19:49:57.854" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240105 19:49:57.830" endtime="20240105 19:49:57.854"/>
</kw>
<status status="PASS" starttime="20240105 19:49:57.826" endtime="20240105 19:49:57.854"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 19:49:57.894" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240105 19:49:57.854" endtime="20240105 19:49:57.894"/>
</kw>
<status status="PASS" starttime="20240105 19:49:57.854" endtime="20240105 19:49:57.894"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:57.894" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240105 19:49:57.894" endtime="20240105 19:49:57.894"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 19:49:58.365" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240105 19:49:58.365" level="INFO">See also file:///D:/Automation%20Testing/playwright-log.txt for additional details.</msg>
<msg timestamp="20240105 19:49:58.365" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240105 19:49:57.894" endtime="20240105 19:49:58.368"/>
</kw>
<status status="FAIL" starttime="20240105 19:49:57.894" endtime="20240105 19:49:58.368"/>
</kw>
<msg timestamp="20240105 19:49:58.368" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240105 19:49:57.894" endtime="20240105 19:49:58.368"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:58.368" endtime="20240105 19:49:58.368"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:58.368" endtime="20240105 19:49:58.368"/>
</branch>
<status status="PASS" starttime="20240105 19:49:58.368" endtime="20240105 19:49:58.368"/>
</if>
<status status="PASS" starttime="20240105 19:49:57.822" endtime="20240105 19:49:58.368"/>
</kw>
<kw name="When Click on the &quot;Sửa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:58.477" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:58.368" endtime="20240105 19:49:58.477"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:58.477" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:58.477" endtime="20240105 19:49:58.477"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:58.484" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:58.477" endtime="20240105 19:49:58.484"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:58.484" endtime="20240105 19:49:58.484"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:58.484" endtime="20240105 19:49:58.484"/>
</branch>
<status status="PASS" starttime="20240105 19:49:58.484" endtime="20240105 19:49:58.484"/>
</if>
<status status="PASS" starttime="20240105 19:49:58.368" endtime="20240105 19:49:58.484"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:58.492" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:58.492" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:58.492" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:58.492" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</kw>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</branch>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</return>
<msg timestamp="20240105 19:49:58.492" level="INFO">${name} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:49:58.484" endtime="20240105 19:49:58.492"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.492"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</branch>
<status status="NOT RUN" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</if>
<status status="NOT RUN" starttime="20240105 19:49:58.492" endtime="20240105 19:49:58.500"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "${name}")]/ancestor::tr${xpath}</value>
<status status="PASS" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</return>
<msg timestamp="20240105 19:49:58.500" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "CT_44 Inventore.")]/ancestor::tr//button[@title = "Sửa"]</msg>
<status status="PASS" starttime="20240105 19:49:58.500" endtime="20240105 19:49:58.500"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:58.500" endtime="20240105 19:49:59.675"/>
</kw>
<status status="PASS" starttime="20240105 19:49:58.500" endtime="20240105 19:49:59.675"/>
</branch>
<status status="PASS" starttime="20240105 19:49:58.492" endtime="20240105 19:49:59.675"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:59.675" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:49:59.675" endtime="20240105 19:49:59.675"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:59.689" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:59.675" endtime="20240105 19:49:59.689"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:49:59.689" endtime="20240105 19:49:59.689"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:49:59.689" endtime="20240105 19:49:59.689"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:59.689" endtime="20240105 19:49:59.689"/>
</branch>
<status status="PASS" starttime="20240105 19:49:59.689" endtime="20240105 19:49:59.697"/>
</if>
<status status="PASS" starttime="20240105 19:49:59.675" endtime="20240105 19:49:59.697"/>
</kw>
<status status="PASS" starttime="20240105 19:49:58.368" endtime="20240105 19:49:59.697"/>
</kw>
<kw name="Then Data's information in &quot;Mô tả&quot; should be equal &quot;_@Mô tả@_&quot;" library="common" sourcename="Data's information in &quot;${field}&quot; should be equal &quot;${value}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:49:59.797" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:49:59.697" endtime="20240105 19:49:59.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:59.797" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:49:59.797" endtime="20240105 19:49:59.797"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:49:59.803" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:49:59.797" endtime="20240105 19:49:59.803"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:49:59.803" endtime="20240105 19:49:59.803"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:49:59.803" endtime="20240105 19:49:59.803"/>
</branch>
<status status="PASS" starttime="20240105 19:49:59.803" endtime="20240105 19:49:59.803"/>
</if>
<status status="PASS" starttime="20240105 19:49:59.697" endtime="20240105 19:49:59.803"/>
</kw>
<kw name="Check Text" library="common">
<var>${value}</var>
<arg>${value}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:49:59.811" level="INFO">${containsS} = ['Mô tả']</msg>
<status status="PASS" starttime="20240105 19:49:59.803" endtime="20240105 19:49:59.811"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:49:59.811" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:49:59.811" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 19:49:59.811" endtime="20240105 19:49:59.811"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:49:59.811" level="INFO">${text} = Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.</msg>
<status status="PASS" starttime="20240105 19:49:59.811" endtime="20240105 19:49:59.811"/>
</kw>
<status status="PASS" starttime="20240105 19:49:59.811" endtime="20240105 19:49:59.811"/>
</branch>
<status status="PASS" starttime="20240105 19:49:59.811" endtime="20240105 19:49:59.811"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:49:59.811" endtime="20240105 19:49:59.811"/>
</return>
<msg timestamp="20240105 19:49:59.811" level="INFO">${value} = Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.</msg>
<status status="PASS" starttime="20240105 19:49:59.803" endtime="20240105 19:49:59.811"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//label[contains(text(),"${field}")]/../../..//*[contains(@class,"ant-input")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20240105 19:49:59.819" level="INFO">Locator found successfully.</msg>
<msg timestamp="20240105 19:49:59.827" level="INFO">${element} = //label[contains(text(),"Mô tả")]/../../..//*[contains(@class,"ant-input")]</msg>
<status status="PASS" starttime="20240105 19:49:59.811" endtime="20240105 19:49:59.827"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>equal</arg>
<arg>${value}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 19:49:59.851" level="INFO">Text: 'Accusantium debitis ex necessitatibus voluptatum assumenda. Et quisquam culpa saepe beatae. Inventore itaque magnam.'</msg>
<status status="PASS" starttime="20240105 19:49:59.827" endtime="20240105 19:49:59.851"/>
</kw>
<status status="PASS" starttime="20240105 19:49:59.697" endtime="20240105 19:49:59.851"/>
</kw>
<kw name="When Click &quot;Đóng lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:49:59.859" endtime="20240105 19:50:00.310"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:50:00.310" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:50:00.310" endtime="20240105 19:50:00.310"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:50:00.358" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:50:00.310" endtime="20240105 19:50:00.358"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:50:00.358" endtime="20240105 19:50:00.358"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 19:50:00.358" endtime="20240105 19:50:00.358"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:50:00.358" endtime="20240105 19:50:00.358"/>
</branch>
<status status="PASS" starttime="20240105 19:50:00.358" endtime="20240105 19:50:00.358"/>
</if>
<status status="PASS" starttime="20240105 19:50:00.310" endtime="20240105 19:50:00.358"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 19:50:00.398" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:50:00.398" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:50:00.446" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:50:00.446" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 19:50:00.454" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 19:50:00.358" endtime="20240105 19:50:00.454"/>
</kw>
<status status="PASS" starttime="20240105 19:49:59.851" endtime="20240105 19:50:00.462"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:50:00.563" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:50:00.462" endtime="20240105 19:50:00.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:50:00.563" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 19:50:00.563" endtime="20240105 19:50:00.563"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:50:00.568" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 19:50:00.563" endtime="20240105 19:50:00.568"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 19:50:00.568" endtime="20240105 19:50:00.568"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:50:00.568" endtime="20240105 19:50:00.576"/>
</branch>
<status status="PASS" starttime="20240105 19:50:00.568" endtime="20240105 19:50:00.576"/>
</if>
<status status="PASS" starttime="20240105 19:50:00.462" endtime="20240105 19:50:00.576"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:50:00.576" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 19:50:00.576" level="INFO">Length is 1</msg>
<msg timestamp="20240105 19:50:00.576" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:50:00.576" level="INFO">${text} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</kw>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</branch>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</return>
<msg timestamp="20240105 19:50:00.576" level="INFO">${name} = CT_44 Inventore.</msg>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.576"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:50:00.584" endtime="20240105 19:50:00.584"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.584"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20240105 19:50:00.584" endtime="20240105 19:50:00.584"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 19:50:00.584" endtime="20240105 19:50:00.584"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:50:00.584" endtime="20240105 19:50:00.584"/>
</branch>
<status status="NOT RUN" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.584"/>
</if>
<status status="NOT RUN" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.584"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "${name}")]/ancestor::tr${xpath}</value>
<status status="PASS" starttime="20240105 19:50:00.592" endtime="20240105 19:50:00.592"/>
</return>
<msg timestamp="20240105 19:50:00.592" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "CT_44 Inventore.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20240105 19:50:00.584" endtime="20240105 19:50:00.592"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:50:00.592" endtime="20240105 19:50:00.939"/>
</kw>
<status status="PASS" starttime="20240105 19:50:00.584" endtime="20240105 19:50:00.939"/>
</branch>
<status status="PASS" starttime="20240105 19:50:00.576" endtime="20240105 19:50:00.939"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:50:00.939" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 19:50:00.939" endtime="20240105 19:50:00.939"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 19:50:00.947" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20240105 19:50:00.939" endtime="20240105 19:50:00.947"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 19:50:00.947" endtime="20240105 19:50:01.212"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 19:50:01.312" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 19:50:01.212" endtime="20240105 19:50:01.312"/>
</kw>
<status status="PASS" starttime="20240105 19:50:00.947" endtime="20240105 19:50:01.312"/>
</branch>
<status status="PASS" starttime="20240105 19:50:00.947" endtime="20240105 19:50:01.312"/>
</if>
<status status="PASS" starttime="20240105 19:50:00.939" endtime="20240105 19:50:01.312"/>
</kw>
<status status="PASS" starttime="20240105 19:50:00.462" endtime="20240105 19:50:01.312"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20240105 19:50:02.018" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20240105 19:50:01.312" endtime="20240105 19:50:02.018"/>
</kw>
<status status="PASS" starttime="20240105 19:50:01.312" endtime="20240105 19:50:02.018"/>
</kw>
<tag>ChangeInfo</tag>
<status status="PASS" starttime="20240105 19:49:44.582" endtime="20240105 19:50:02.018"/>
</test>
<status status="PASS" starttime="20240105 19:49:43.362" endtime="20240105 19:50:02.057"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">ChangeInfo</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Code Type">Code Type</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
